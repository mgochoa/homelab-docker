services:
  nginxproxymanager:
    image: 'jc21/nginx-proxy-manager:latest' 
    container_name: nginxproxymanager
    restart: unless-stopped 
    ports:
      - '80:80'
      - '81:81'
      - '443:443' 
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt 

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin 
    volumes:
      - ./nextcloud/appdata:/config 
      - ./nextcloud/data:/data
    restart: unless-stopped 

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin 
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin 
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/tvshows:/data/tvshows
      - ./jellyfin/movies:/data/movies 
    restart: unless-stopped

  homepage:
    image: homepage:v1
    container_name: homepage
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin 
    restart: unless-stopped

  bitwarden:
    depends_on:
      - db
    env_file:
      - ./settings.env
    image: ghcr.io/bitwarden/self-host:beta
    restart: always
    volumes:
      - ./bitwarden/bitwarden:/etc/bitwarden
      - ./bitwarden/logs:/var/log/bitwarden
  db:
    environment:
      MARIADB_USER: "bitwarden"
      MARIADB_PASSWORD: "super_strong_password"
      MARIADB_DATABASE: "bitwarden_vault"
      MARIADB_RANDOM_ROOT_PASSWORD: "true"
    image: mariadb:10
    restart: always
    volumes:
      - ./bitwarden/data:/var/lib/mysql

  # pihole:
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   environment:
  #     TZ: 'Europe/Berlin'
  #     WEBPASSWORD: 'TestAutoGenerated19191' # Change this
  #     DNSMASQ_LISTENING: all
  #   volumes:
  #     - ./pihole/etc-pihole:/etc/pihole
  #     - ./pihole/etc-dnsmasq.d:/etc/dnsmasq.d
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "8081:80" # Web interface (avoid conflict with NPM on 80)
  #   restart: unless-stopped
  #   cap_add:
  #     - NET_ADMIN
  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    restart: unless-stopped
    # It can be opened in localhost as well
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - ./openwebui:/app/backend/data
    depends_on:
      - ollama

  smokeping:
    image: lscr.io/linuxserver/smokeping:latest
    container_name: smokeping
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Berlin
    volumes:
      - ./smokeping/config:/config
      - ./smokeping/data:/data
    ports:
      - 8099:80
    mem_limit: 4096m
    restart: unless-stopped
